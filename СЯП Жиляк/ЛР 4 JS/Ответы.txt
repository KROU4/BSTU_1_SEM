1. Что такое объект?
2. Какие есть способы создания объектов?
3. Что такое литерал объекта?
4. Можно ли изменить объект, который был объявлен при помощи директивы const?
5. Что такое вычисляемые свойства и как они задаются?
6. Что такое короткие свойства и как они задаются?
7. Какой тип данных должен быть у свойств объекта?
8. Для чего используется оператор new и что такое функция-конструктор?
9. Какими способами можно обращаться к свойствам объекта и как обращаться к
свойствам, имена которых состоят из нескольких слов?
10. Для чего используется свойство prototype? 11. Какие есть способы добавления свойств для объекта?
12. Какой удалить свойство объекта?
13. Какой тип данных может быть у свойств объекта?
14. Какие есть способы добавления методов? 15. Что такое объект-прототип?
16. Какие есть способы проверки существования свойства в объекте?
17. Что такое ключевое слово this?
18. Какие есть методы или свойства для проверки и определения типа данных?


1. Объект - это абстрактная структура данных, представляющая собой набор свойств и методов.
2. Существует несколько способов создания объектов: через литерал объекта, через конструктор и через метод Object.create().
3. Литерал объекта - это способ объявления объекта с помощью синтаксиса JavaScript. Литерал объекта представляет собой фигурные скобки, внутри которых можно определить пары ключ/значение для атрибутов объекта.
4. Нет, объект, объявленный при помощи директивы const, не может быть изменен.
5. Вычисляемые свойства - это свойства, значение которых вычисляется динамически. Они задаются при помощи скобочной нотации с помощью имени свойства в квадратных скобках.
6. Короткие свойства - это свойства, значения которых указываются при объявлении объекта. Они задаются при помощи пар ключ/значение внутри литерала объекта.
7. Тип данных свойств объекта может быть любым, включая числа, строки, булевские значения, массивы и другие объекты.
8. Оператор new используется для создания экземпляра объекта при помощи функции-конструктора. Функция-конструктор - это специальная функция, используемая для создания объектов.
9. Для обращения к свойствам объекта можно использовать точечную нотацию или скобочную нотацию. Для обращения к свойствам, имена которых состоят из нескольких слов, можно использовать скобочную нотацию.
10. Свойство prototype используется для создания класса объектов. Это свойство содержит ссылку на прототип объекта, который определяет общие свойства и методы для всех экземпляров данного класса.
11. Существует несколько способов добавления свойств для объекта: через статическое добавление свойств в литерале объекта, через динамическое добавление с помощью оператора dot или через динамическое добавление с помощью скобочной нотации.
12. Чтобы удалить свойство объекта, можно использовать метод delete.
13. Тип данных свойств объекта может быть любым, включая числа, строки, булевские значения, массивы и другие объекты.
14. Методы могут быть добавлены при помощи литерала объекта, присвоения функции или использования метода Object.defineProperty().
15. Объект-прототип - это объект, из которого наследуются свойства и методы других объектов.
16. Для проверки существования свойства в объекте можно использовать оператор in, методы hasOwnProperty() или propertyIsEnumerable() и оператор typeof.
17. Ключевое слово this - это ключевое слово, которое указывает на текущий объект в контексте выполнения текущего кода.
18. Для проверки и определения типа данных можно использовать методы или свойства typeof, instanceof и constructor.