способы подключения обработчика событий в js

1. С помощью HTML-атрибутов:

```html
<button onclick="handleClick()">Нажми меня</button>
```

2. С помощью метода .addEventListener():

```js
const button = document.querySelector('button');
button.addEventListener('click', handleClick);
```

3. С помощью метода .onclick:

```js
const button = document.querySelector('button');
button.onclick = handleClick;
```


в чём различие map и set в js


Map хранит записи в виде пар ключ-значение, в то время как Set хранит только значения. Map может хранить значения любого типа, в то время как Set может хранить только уникальные значения. Map имеет методы для поиска значения по ключу, а Set нет. Map имеет методы для итерации по ключу/значению, а Set имеет методы для итерации по значениям.

как протекают события в js


События в JavaScript протекают по следующему процессу: 

1. Вызывается событие.
2. Браузер находит обработчик события и добавляет его в очередь событий.
3. Очередь событий обрабатывается синхронно или асинхронно, в зависимости от браузера.
4. Обработчик события выполняется.

поподробнее про пункт 3


Если обработчик события запущен в синхронном режиме, он будет выполняться последовательно после предыдущего обработчика события и до следующего. Это означает, что если обработчик события длительное время выполняется, другие обработчики будут ожидать, пока текущий не будет завершен.

Если обработчик события запущен в асинхронном режиме, он будет выполняться независимо от других обработчиков. Это означает, что другие обработчики не будут ждать, пока текущий не будет завершен.

событийный цикл в js


JS событийный цикл представляет собой последовательность событий, которые происходят в приложении или скрипте. Он начинается с вызова события и завершается выполнением соответствующего обработчика. Во время выполнения цикла происходят следующие шаги: 

1. Событие вызывается.
2. Очередь событий добавляет обработчик события в очередь событий браузера.
3. Очередь событий браузера обрабатывается синхронно или асинхронно, в зависимости от браузера.
4. Обработчик события выполняется.
5. Вызывается следующее событие.
6. Цикл продолжается, пока не закончатся события.


что такое eventloop в js


EventLoop это процесс в JavaScript, который отвечает за выполнение обработчиков событий и других задач. Он работает следующим образом: браузер просматривает очередь событий и запускает обработчики событий в соответствии с порядком их добавления. Когда очередь событий опустеет, EventLoop завершается.